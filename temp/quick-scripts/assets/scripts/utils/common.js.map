{"version":3,"sources":["common.js"],"names":["getGameController","spriteUpdate","scoreAnimation","getEffect","getWorldLocation","getAllBranches","getCanvas","getMinDistance_P_Line","getMinDistance_P_C","getMinDistance_P_Poly","isOutOfBorder","changeRectangle","getAllToolsPosition","node","canvas","gameController","getChildren","getComponent","sprite","spriteUrl","spriteFrame","cc","SpriteFrame","setTexture","url","raw","score","duration","scoreNode","Node","parent","addChild","addComponent","Sprite","label","Label","font","string","toolPos","getPosition","setPosition","pos","actionPos","moveTo","x","y","actionFade","fadeTo","runAction","selfCollider","otherCollider","angle","rigid_self","RigidBody","rigid_oth","vel_self","linearVelocity","vel_oth","mas_self","getMass","mas_oth","vel_del","sub","vel_vertical","Math","abs","sin","cos","effect","convertToWorldSpaceAR","root","branches","Array","getCld","grand","children","forEach","push","child","point","line_1","line_2","dis","dx","dy","k","footX","footY","min","max","hypot","dis1","dis2","center","radius","ps","length","i","location","minX","maxX","minY","maxY","position","size","rec","width","height","bg","ans","branch","type","_name","indexOf"],"mappings":"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","file":"common.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\utils","sourcesContent":["export function getGameController(node){//获取GameController\r\n    let canvas = getCanvas(node);\r\n    let gameController = canvas.getChildren()[0].getComponent('gameController');\r\n    return gameController;\r\n}\r\n\r\nexport function spriteUpdate(sprite, spriteUrl){// 更换sprite图片\r\n    let spriteFrame = new cc.SpriteFrame();\r\n    spriteFrame.setTexture(cc.url.raw(spriteUrl));\r\n    sprite.spriteFrame = spriteFrame;\r\n}\r\n\r\nexport function scoreAnimation(node, score, duration){// 加载分数动画\r\n    if(!score){\r\n        return; \r\n    }\r\n    let scoreNode = new cc.Node();\r\n    \r\n    node.parent.addChild(scoreNode);\r\n    if(score === 10000 || score === 5000){\r\n        let sprite = scoreNode.addComponent(cc.Sprite);\r\n        let url = 'resources/textures/scores/score_' + score + \".png\";\r\n        spriteUpdate(sprite, url);\r\n    }\r\n    else{\r\n        let label = scoreNode.addComponent(cc.Label);\r\n        let font = \"resources/textures/font/mikado_outline_shadow.fnt\";\r\n        label.font = font;\r\n        label.string = score;\r\n    }\r\n    let toolPos = node.getPosition();\r\n    scoreNode.setPosition(toolPos);\r\n\r\n    let pos = scoreNode.getPosition();\r\n    let actionPos = cc.moveTo(duration, pos.x, pos.y + 150);\r\n    let actionFade = cc.fadeTo(duration, 0);\r\n\r\n    scoreNode.runAction(actionPos);\r\n    scoreNode.runAction(actionFade);\r\n}\r\n\r\nexport function getEffect(selfCollider, otherCollider, angle){// 获得冲击伤害值\r\n    // 刚体\r\n    let rigid_self = selfCollider.getComponent(cc.RigidBody);\r\n    let rigid_oth = otherCollider.getComponent(cc.RigidBody);\r\n    // 速度\r\n    let vel_self = rigid_self.linearVelocity;\r\n    let vel_oth = rigid_oth.linearVelocity;\r\n    //质量\r\n    let mas_self = rigid_self.getMass();\r\n    let mas_oth = rigid_oth.getMass();\r\n    // 相对速度\r\n    let vel_del = vel_oth.sub(vel_self);\r\n    // 法向速度绝对值 / 8\r\n    let vel_vertical = Math.abs(vel_del.x * Math.sin(angle) + vel_del.y * Math.cos(angle)) / 8 ;\r\n    // 伤害\r\n    if(mas_oth === 0){//地面，相当于镜面相撞\r\n        mas_oth = mas_self;\r\n    }\r\n    let effect = 0.5 * mas_oth * vel_vertical * vel_vertical;\r\n\r\n    return effect;\r\n}\r\n\r\nexport function getWorldLocation(node){// 获得世界坐标\r\n    return node.parent.convertToWorldSpaceAR(node);\r\n}\r\n\r\nexport function getAllBranches(root){// 得到所有子节点\r\n    let branches = new Array();\r\n\r\n    let getCld = function(node){\r\n        return node.getChildren();\r\n    }\r\n\r\n    let grand = function(node){\r\n        if(node){\r\n            let children = getCld(node);\r\n            children.forEach(child => {\r\n                branches.push(child);\r\n                grand(child);\r\n            })\r\n        }\r\n    }\r\n\r\n    grand(root);\r\n    return branches;\r\n}\r\n\r\nexport function getCanvas(node){// 得到canvas\r\n    let root = node;\r\n    while(root.parent){\r\n        root = root.parent;\r\n    }\r\n    return root;\r\n}\r\n\r\nexport function getMinDistance_P_Line(point, line_1, line_2){// 点到线段的最小距离\r\n    let dis = 0;\r\n    let dx = line_2.x - line_1.x;\r\n    let dy = line_2.y - line_1.y;\r\n \r\n    // 两直线垂直，向量表示法\r\n    let k = -((line_1.x - point.x) * dx + (line_1.y - point.y) * dy) / (dx * dx + dy * dy);\r\n    let footX = k * dx + line_1.x;\r\n    let footY = k * dy + line_1.y;\r\n \r\n    //if垂足是否落在线段上\r\n    if(footY >= Math.min(line_1.y, line_2.y)\r\n    && footY <= Math.max(line_1.y, line_2.y)\r\n    && footX >= Math.min(line_1.x, line_2.x) \r\n    && footX <= Math.max(line_1.x, line_2.x)){\r\n        dis = Math.hypot(footX - point.x, footY - point.y);\r\n    }\r\n    else{\r\n        let dis1 = Math.hypot(line_1.x - point.x, line_1.y - point.y);\r\n        let dis2 = Math.hypot(line_2.x - point.x, line_2.y - point.y);\r\n \r\n        dis = ( dis1 < dis2 ? dis1 : dis2 );\r\n    }\r\n    return dis;\r\n}\r\n\r\nexport function getMinDistance_P_C(point, center, radius){// 点到圆的最小距离\r\n    let dis = Math.hypot(point.x - center.x, point.y - center.y);\r\n    dis -= radius;\r\n    dis = Math.max(dis, 0);\r\n    return dis;\r\n}\r\n\r\nexport function getMinDistance_P_Poly(point, ...ps){// 点到多边形的最小距离\r\n    let dis = getMinDistance_P_Line(point, ps[ps.length - 1], ps[0]);\r\n    for(let i = 0; i < ps.length - 1; ++i){\r\n        dis = Math.min(dis, getMinDistance_P_Line(point, ps[i], ps[i + 1]));\r\n    }\r\n    return dis;\r\n}\r\n\r\nexport function isOutOfBorder(location, minX, maxX, minY, maxY){// 是否在矩形之外\r\n    if(location.x < minX || location.x > maxX || location.y < minY || location.y > maxY){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function changeRectangle(position, size){// 将矩形改成四点坐标\r\n    let rec = [];\r\n    rec[0] = position.x - size.width / 2;\r\n    rec[1] = position.x + size.width / 2;\r\n    rec[2] = position.y - size.height / 2;\r\n    rec[3] = position.y + size.height / 2;\r\n    return rec;\r\n}\r\n\r\nexport function getAllToolsPosition(bg){\r\n    let branches = getAllBranches(bg);\r\n    let ans = {\r\n        'wood' : \r\n            {\r\n                'long' : [],\r\n                'short' : [],\r\n                'circle' : []\r\n            },\r\n        'stone' : \r\n            {\r\n                'long' : [],\r\n                'triangle' : [],\r\n                'circle' : []\r\n            },\r\n        'ice' : [],\r\n        'shelf' : [],\r\n        'pig' : [],\r\n    };\r\n    branches.forEach(branch => {\r\n        if(branch) {\r\n            let type = branch._name;\r\n            if(type.indexOf('bird')){\r\n\r\n            }\r\n            else if(type.indexOf('tool')){\r\n                \r\n            }\r\n        } \r\n    });\r\n}"]}