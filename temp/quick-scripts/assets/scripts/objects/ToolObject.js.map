{"version":3,"sources":["ToolObject.js"],"names":["cc","Class","extends","Component","properties","blood_max","blood","armor","crisp","fragmentPrefab","default","type","Prefab","deathAudio","url","AudioClip","onPostSolve","contact","selfCollider","otherCollider","angle","Math","PI","node","rotation","effect","name","sprite","getComponent","Sprite","onAttack","imageId","spriteImage","setVelocity","vel_x","vel_y","rigid","RigidBody","linearVelocity","Vec2","setFragment","location","num","floor","random","i","fragmentNode","instantiate","parent","locationParent","delta","sub","x","getContentSize","width","y","height","addChild","setPosition","fragment","fragmentType","velocityMax","init","indexOf","_onDeath","setContentSize","spriteFrame","SpriteFrame","_onPlayAudio","duration","score","gameController","addScore","scheduleOnce","destroy","currentAudio","audioEngine","play","_onStopAudio","stop"],"mappings":"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","file":"ToolObject.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\objects","sourcesContent":["import {getEffect} from '../utils/common';\r\nimport {spriteUpdate} from '../utils/common';\r\nimport {getWorldLocation } from '../utils/common';\r\nimport {getGameController } from '../utils/common';\r\nimport {scoreAnimation } from '../utils/common';\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //满血血量 : 100\r\n        blood_max : 0,\r\n        //当前血量\r\n        blood : 0,\r\n        //护甲 =.=，对非鸟类的冲撞的伤害减少比例\r\n        armor : 0,\r\n        //脆性 =.= 对鸟类的冲撞的伤害增加比例\r\n        crisp : 0,\r\n        // 碎片prefab \r\n        fragmentPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        // 死亡音频\r\n        deathAudio : {\r\n            url: cc.AudioClip,\r\n            default: null\r\n        },\r\n        //类型\r\n        type : '',\r\n    },\r\n\r\n    // 每次处理完碰撞体接触逻辑时被调用，\r\n    onPostSolve: function (contact, selfCollider, otherCollider) {\r\n        /* 碰撞对object的影响 */\r\n        // object角度（弧度）\r\n        let angle = 180/Math.PI * this.node.rotation;\r\n        // 伤害\r\n        let effect = getEffect(selfCollider, otherCollider, angle);\r\n        if(effect === 0){\r\n            return;\r\n        }\r\n        // 碰撞物体的种类\r\n        let name = otherCollider.node.name;\r\n        // 切换图片\r\n        let sprite = this.node.getComponent(cc.Sprite);\r\n        // 受伤\r\n        this.onAttack(effect, name);\r\n        // 是否死亡\r\n        if(!this.blood){\r\n            return;\r\n        }\r\n        else if(this.blood > 0 && this.blood <= this.blood_max / 3 && this.imageId !== 2){\r\n            this.imageId = 2;\r\n            spriteUpdate(sprite, this.spriteImage + this.type + \"_\" + this.imageId + \".png\");\r\n        }\r\n        else if(this.blood > this.blood_max / 3 && this.blood <= this.blood_max * 2 / 3 && this.imageId !== 1){\r\n            this.imageId = 1;\r\n            spriteUpdate(sprite, this.spriteImage + this.type + \"_\" + this.imageId + \".png\");\r\n        }\r\n    },\r\n\r\n    // 设置刚体速度\r\n    setVelocity : function(vel_x, vel_y){\r\n        let rigid = this.node.getComponent(cc.RigidBody);\r\n        rigid.linearVelocity = new cc.Vec2(vel_x, vel_y);\r\n    },\r\n\r\n    // 设置碎片\r\n    setFragment : function(){\r\n        if(!this.fragmentPrefab){\r\n            return;\r\n        }\r\n        let location = getWorldLocation(this.node);\r\n        let num = Math.floor(Math.random() * 4) + 3;\r\n\r\n        for(let i = 0; i < num; ++i){\r\n            let imageId = Math.floor(3 * Math.random());\r\n            if(imageId >= 3){\r\n                imageId = 2;\r\n            }\r\n            // 碎屑node\r\n            let fragmentNode = cc.instantiate(this.fragmentPrefab);\r\n            let parent = this.node.parent;\r\n            let locationParent = getWorldLocation(parent);\r\n            // 相对位置\r\n            let delta = location.sub(locationParent);\r\n            // 随机x,y\r\n            let x = delta.x + this.node.getContentSize().width * (Math.random() - 0.5);\r\n            let y = delta.y + this.node.getContentSize().height * (Math.random() - 0.5);\r\n            parent.addChild(fragmentNode);\r\n            fragmentNode.setPosition(x, y);\r\n            // 碎屑\r\n            let fragment = fragmentNode.getComponent(this.fragmentType);\r\n            let vel_x = fragment.velocityMax * (Math.random() - 0.5);\r\n            let vel_y = fragment.velocityMax * (Math.random() - 0.5);\r\n            fragment.setVelocity(vel_x, vel_y);\r\n            fragment.init(imageId);\r\n        }\r\n    },\r\n\r\n    //收到伤害\r\n    onAttack : function(effect, name){\r\n        if(this.blood <= 0){\r\n            return;\r\n        }\r\n        // 鸟对object的伤害远高于其他刚体对木头的伤害\r\n        if(name !== null && name.indexOf('bird') !== -1 ){\r\n            this.blood -= effect * this.crisp;\r\n        }\r\n        else{\r\n            this.blood -= effect / this.armor;\r\n        }\r\n        if(this.blood <= 0){\r\n            this.blood = 0;\r\n            this._onDeath();\r\n        }\r\n    },\r\n\r\n    // 死亡处理\r\n    _onDeath : function(){\r\n        if(this.node){\r\n            // 血量为0\r\n            this.blood = 0;\r\n            // 动画效果\r\n            this.setFragment();\r\n            // 先缩小到0\r\n            this.node.setContentSize(0, 0);\r\n            this.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame();\r\n            // 播放音效\r\n            this._onPlayAudio();\r\n            // 延时\r\n            let duration = 1;\r\n            // 分数\r\n            if(this.score){\r\n                // 分数动画\r\n                scoreAnimation(this.node, this.score, duration);\r\n                const gameController = getGameController(this.node);\r\n                gameController.addScore(this.score);\r\n            }\r\n             // 延时销毁本体\r\n             this.scheduleOnce(function(){\r\n                this.node.destroy()\r\n            }, duration);\r\n        }\r\n    },\r\n\r\n    // 播放音效 死亡音效\r\n    _onPlayAudio : function(){\r\n        if(this.deathAudio){\r\n            this.currentAudio = cc.audioEngine.play(this.deathAudio, false, 1);\r\n        }\r\n    },\r\n\r\n    //停止音效\r\n    _onStopAudio : function(){\r\n        cc.audioEngine.stop(this.currentAudio);\r\n    },\r\n});\r\n"]}